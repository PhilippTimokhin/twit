{"version":3,"sources":["images/rocket.gif","components/DialogEdit.js","images/cry.gif","components/DialogRemove.js","components/TwitList.js","images/zombie.gif","images/alien.gif","components/DialogRemoveAllTwits.js","components/TwitForm.js","images/hand.gif","components/Header.js","images/iam.gif","components/Footer.js","Twit.js","index.js"],"names":["DialogEdit","onClose","inner","setEditingDescription","setEditingTitle","editingDescription","editingTitle","handleOnSubmit","enabled","length","className","src","Rocket","alt","title","value","placeholder","onChange","event","target","description","rows","onClick","disabled","DialogRemove","onDelete","Cry","id","TwitList","data","onEdit","checkState","useState","showDialogRemove","setShowDialogRemove","showDialogEdit","setShowDialogEdit","selected","setSelected","selectedEdit","setSelectedEdit","tasksNoun","headingText","handleOnCloseDialogEdit","e","preventDefault","map","style","backgroundColor","completed","textDecoration","date","type","checked","color","handleOnOpenDialogRemove","handleOnOpenDialogEdit","DialogRemoveAllTwits","closeDialog","clearAllData","Alien","TwitForm","setData","search","setSearch","handleRemoveChecked","reverse","setReverse","setTitle","setDescription","onReverseOpen","Zombie","newState","uuid_v4","Date","getDate","getMonth","getFullYear","prev","handleOnAdd","alert","Header","Hand","Footer","Philipp","Twit","useEffect","saved","JSON","parse","localStorage","getItem","setItem","stringify","filteredList","filter","toLocaleLowerCase","includes","checkData","updated","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ede0f41.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/rocket.2c8022ec.gif\";","import React from \"react\";\r\nimport Rocket from \"../images/rocket.gif\";\r\n\r\nconst DialogEdit = ({\r\n  onClose,\r\n  inner,\r\n  setEditingDescription,\r\n  setEditingTitle,\r\n  editingDescription,\r\n  editingTitle,\r\n  handleOnSubmit,\r\n}) => {\r\n  const enabled = editingTitle.length >= 3 && editingDescription.length >= 3;\r\n  return (\r\n    <>\r\n      <section className=\"dialogEdit dialogEdit--wrapper\">\r\n        <form className=\"paper dialogEdit__paper\">\r\n          <div>\r\n            <img src={Rocket} alt=\"cry\" />\r\n          </div>\r\n          <span className=\"paper__post\">\r\n            Вы хотите изменить твит \"{inner.title}\" ?\r\n          </span>\r\n          <div className=\"form dialogEdit__form\">\r\n            <input\r\n              value={editingTitle}\r\n              placeholder={inner.title}\r\n              className=\"form__input\"\r\n              onChange={(event) => setEditingTitle(event.target.value)}\r\n            />\r\n            <textarea\r\n              value={editingDescription}\r\n              placeholder={inner.description}\r\n              rows={5}\r\n              className=\"form__textarea\"\r\n              onChange={(event) => setEditingDescription(event.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"btn dialogEdit__btn\">\r\n            <button\r\n              className=\"btn__yes\"\r\n              onClick={handleOnSubmit}\r\n              disabled={!enabled}\r\n            >\r\n              Изменить\r\n            </button>\r\n            <button className=\"btn__no\" onClick={onClose}>\r\n              Отменить\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DialogEdit;\r\n","export default __webpack_public_path__ + \"static/media/cry.9565c742.gif\";","import React from \"react\";\r\nimport Cry from \"../images/cry.gif\";\r\n\r\nconst DialogRemove = ({ onDelete, onClose, inner }) => {\r\n  return (\r\n    <>\r\n      <section className=\"dialogRemove dialogRemove--wrapper\">\r\n        <div className=\"paper dialogRemove__paper\">\r\n          <div>\r\n            <img src={Cry} alt=\"cry\" />\r\n          </div>\r\n          <span className=\"paper__post\">\r\n            Вы действительно хотите удалить пост \"{inner.title}\" ?\r\n          </span>\r\n          <div className=\"btn dialogRemove__btn\">\r\n            <button\r\n              className=\"btn__yes\"\r\n              onClick={() => {\r\n                onDelete(inner.id);\r\n                onClose();\r\n              }}\r\n            >\r\n              Да\r\n            </button>\r\n            <button className=\"btn__no\" onClick={onClose}>\r\n              Нет, не хочу\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DialogRemove;\r\n","import React, { useState } from \"react\";\r\nimport DialogEdit from \"./DialogEdit\";\r\nimport DialogRemove from \"./DialogRemove\";\r\n\r\nconst TwitList = ({\r\n  data,\r\n  onDelete,\r\n  onEdit,\r\n  setEditingDescription,\r\n  setEditingTitle,\r\n  editingDescription,\r\n  editingTitle,\r\n  checkState,\r\n}) => {\r\n  const [showDialogRemove, setShowDialogRemove] = useState(false);\r\n  const [showDialogEdit, setShowDialogEdit] = useState(false);\r\n  const [selected, setSelected] = useState(null);\r\n  const [selectedEdit, setSelectedEdit] = useState(null);\r\n\r\n  const tasksNoun = data.length !== 1 ? \"Твитов\" : \"Твит\";\r\n  const headingText = `На стене: ${data.length} ${tasksNoun} 😉`;\r\n  const handleOnOpenDialogEdit = (inner) => {\r\n    setSelectedEdit(inner);\r\n    setShowDialogEdit(true);\r\n  };\r\n\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n    onEdit(selectedEdit.id, editingTitle, editingDescription);\r\n    handleOnCloseDialogEdit();\r\n  };\r\n  const handleOnCloseDialogEdit = () => {\r\n    setShowDialogEdit(false);\r\n    setSelectedEdit(null);\r\n  };\r\n\r\n  const handleOnOpenDialogRemove = (inner) => {\r\n    setSelected(inner);\r\n    setShowDialogRemove(true);\r\n  };\r\n\r\n  const handleOnCloseDialogRemove = () => {\r\n    setShowDialogRemove(false);\r\n    setSelected(null);\r\n  };\r\n\r\n  if (data.length === 0) {\r\n    return (\r\n      <div className=\"empty empty--wrapper\">\r\n        <span className=\"empty__twit\">На стене не найдено твитов 😓</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section className=\"list list--wrapper\">\r\n        <span className=\"list__count\">{headingText}</span>\r\n        {showDialogRemove && (\r\n          <div className=\"dialog list__dialog\">\r\n            <DialogRemove\r\n              onClose={handleOnCloseDialogRemove}\r\n              inner={selected}\r\n              onDelete={onDelete}\r\n            />\r\n          </div>\r\n        )}\r\n        {showDialogEdit && (\r\n          <div className=\"dialog list__dialog\">\r\n            <DialogEdit\r\n              handleOnSubmit={handleOnSubmit}\r\n              onClose={handleOnCloseDialogEdit}\r\n              inner={selectedEdit}\r\n              onEdit={onEdit}\r\n              setEditingDescription={setEditingDescription}\r\n              editingDescription={editingDescription}\r\n              setEditingTitle={setEditingTitle}\r\n              editingTitle={editingTitle}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {data.map((inner) => (\r\n          <div\r\n            className=\"card list__card\"\r\n            key={inner.title}\r\n            style={{ backgroundColor: inner.completed ? \"#e0e0e0\" : \"white\" }}\r\n          >\r\n            <span\r\n              className=\"card__title\"\r\n              style={{\r\n                textDecoration: inner.completed ? \"line-through\" : \"none\",\r\n              }}\r\n            >\r\n              <em className=\"card__text\">Твит: </em> {inner.title}\r\n            </span>\r\n            <span\r\n              className=\"card__description\"\r\n              style={{\r\n                textDecoration: inner.completed ? \"line-through\" : \"none\",\r\n              }}\r\n            >\r\n              <em className=\"card__text\">Пост: </em> {inner.description}\r\n            </span>\r\n            <span className=\"card__date\">\r\n              <em>Дата: {inner.date}</em>\r\n            </span>\r\n            <div className=\"card__check\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={inner.completed}\r\n                onChange={() => checkState(inner.id)}\r\n              />\r\n              <span className=\"checkText\">\r\n                <em style={{ color: inner.completed ? \"green\" : \"black\" }}>\r\n                  Прочитано\r\n                </em>\r\n              </span>\r\n            </div>\r\n            <div className=\"btn card__btn\">\r\n              <button\r\n                className=\"btn_remove\"\r\n                onClick={() => handleOnOpenDialogRemove(inner)}\r\n              >\r\n                Удалить\r\n              </button>\r\n              <button\r\n                className=\"btn_edit\"\r\n                onClick={() => handleOnOpenDialogEdit(inner)}\r\n              >\r\n                Редактировать\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TwitList;\r\n","export default __webpack_public_path__ + \"static/media/zombie.fd659cd9.gif\";","export default __webpack_public_path__ + \"static/media/alien.00594447.gif\";","import React from \"react\";\r\nimport Alien from \"../images/alien.gif\";\r\n\r\nconst DialogRemoveAllTwits = ({ closeDialog, clearAllData }) => {\r\n  const deleteAndClose = () => {\r\n    clearAllData();\r\n    closeDialog();\r\n  };\r\n  return (\r\n    <>\r\n      <section className=\"dialogRemove dialogRemove--wrapper\">\r\n        <div className=\"paper dialogRemove__paper\">\r\n          <div>\r\n            <img src={Alien} alt=\"cry\" />\r\n          </div>\r\n          <span className=\"paper__post\">\r\n            Вы действительно хотите удалить все твиты?\r\n          </span>\r\n          <div className=\"btn dialogRemove__btn\">\r\n            <button className=\"btn__yes\" onClick={deleteAndClose}>\r\n              Да\r\n            </button>\r\n            <button className=\"btn__no\" onClick={closeDialog}>\r\n              Нет, не хочу\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DialogRemoveAllTwits;\r\n","import React, { useState } from \"react\";\r\nimport Zombie from \"../images/zombie.gif\";\r\nimport { v4 as uuid_v4 } from \"uuid\";\r\nimport DialogRemoveAllTwits from \"./DialogRemoveAllTwits\";\r\n\r\nconst TwitForm = ({\r\n  data,\r\n  setData,\r\n  search,\r\n  setSearch,\r\n  clearAllData,\r\n  handleRemoveChecked,\r\n}) => {\r\n  const [reverse, setReverse] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [showDialogRemove, setShowDialogRemove] = useState(false);\r\n  const openDialog = () => {\r\n    if (!data.length) {\r\n      return alert(\"На стене не найдено твитов\");\r\n    } else {\r\n      setShowDialogRemove(true);\r\n    }\r\n  };\r\n\r\n  const closeDialog = () => {\r\n    setShowDialogRemove(false);\r\n  };\r\n  const handleOnAdd = () => {\r\n    const newState = {\r\n      title: title,\r\n      description: description,\r\n      id: uuid_v4(),\r\n      date:\r\n        new Date().getDate() +\r\n        \".\" +\r\n        (new Date().getMonth() + 1) +\r\n        \".\" +\r\n        new Date().getFullYear(),\r\n      completed: false,\r\n    };\r\n    setData((prev) => [newState, ...prev]);\r\n  };\r\n\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleOnAdd(title, description);\r\n    setTitle(\"\");\r\n    setDescription(\"\");\r\n    onReverseOpen();\r\n  };\r\n  const onReverseOpen = () => setReverse(!reverse);\r\n  const enabled = title.length > 3 && description.length > 3;\r\n  return (\r\n    <>\r\n      {reverse ? (\r\n        <section className=\"form form--wrapper\">\r\n          <img src={Zombie} alt=\"zombie\" />\r\n          <form className=\"adding form__adding\">\r\n            <input\r\n              placeholder=\"Введите название твита...\"\r\n              className=\"adding__input\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n            <textarea\r\n              placeholder=\"Введите содержимое поста...\"\r\n              rows={5}\r\n              className=\"adding__textarea\"\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            />\r\n            <div className=\"btn from__btn\">\r\n              <button\r\n                className=\"btn__add\"\r\n                onClick={handleOnSubmit}\r\n                disabled={!enabled}\r\n              >\r\n                Добавить\r\n              </button>\r\n              <button className=\"btn__cancel\" onClick={onReverseOpen}>\r\n                Отменить\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </section>\r\n      ) : (\r\n        <div className=\"btn btn--wrapper\">\r\n          <div className=\"group btn__group\">\r\n            <button className=\"btn__twit\" onClick={onReverseOpen}>\r\n              Твитнуть\r\n            </button>\r\n            <button className=\"btn__twitDel\" onClick={handleRemoveChecked}>\r\n              Удалить выбранные твиты\r\n            </button>\r\n            <button className=\"btn__twitDel\" onClick={openDialog}>\r\n              Удалить все твиты\r\n            </button>\r\n          </div>\r\n\r\n          <div>\r\n            <input\r\n              className=\"search__input\"\r\n              placeholder=\"Найдите твит...\"\r\n              value={search}\r\n              onChange={(event) => setSearch(event.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n      {showDialogRemove && (\r\n        <div className=\"dialog list__dialog\">\r\n          <DialogRemoveAllTwits\r\n            closeDialog={closeDialog}\r\n            clearAllData={clearAllData}\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TwitForm;\r\n","export default __webpack_public_path__ + \"static/media/hand.b865d9c2.gif\";","import React from \"react\";\r\nimport Hand from \"../images/hand.gif\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <header className=\"header header--wrapper\">\r\n        <div className=\"media header__media\">\r\n          <img className=\"header__logo\" src={Hand} alt=\"header logo\" />\r\n          <span className=\"header__text\">Twit you quotes</span>\r\n        </div>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/iam.0d349263.gif\";","import React from \"react\";\r\nimport Philipp from \"../images/iam.gif\";\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <footer className=\"footer footer--wrapper\">\r\n        <div className=\"media media__footer\">\r\n          <img src={Philipp} alt=\"footer logo\" />\r\n          <span className=\"media__text\">Made by Philipp Timokhin</span>\r\n        </div>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\nimport TwitList from \"./components/TwitList\";\nimport TwitForm from \"./components/TwitForm\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\nconst Twit = () => {\n  const [data, setData] = useState([]);\n  const [editingTitle, setEditingTitle] = useState(\"\");\n  const [editingDescription, setEditingDescription] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n\n  useEffect(() => {\n    const saved = JSON.parse(localStorage.getItem(\"data\") || \"[]\");\n    setData(saved);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"data\", JSON.stringify(data));\n  }, [data]);\n\n  const handleRemove = (id) => {\n    setData(data.filter((inner) => inner.id !== id));\n  };\n\n  const handleRemoveChecked = () => {\n    setData(data.filter((inner) => inner.completed !== true));\n  };\n\n  const updateData = (id, editingTitle, editingDescription) => {\n    const updated = data.map((inner) => {\n      if (id === inner.id) {\n        return {\n          ...inner,\n          title: editingTitle,\n          description: editingDescription,\n        };\n      }\n      return inner;\n    });\n    setData(updated);\n  };\n\n  const checkState = (id) => {\n    let checkData = [...data].map((inner) => {\n      if (inner.id === id) {\n        inner.completed = !inner.completed;\n      }\n      return inner;\n    });\n    setData(checkData);\n  };\n\n  const filteredList = data.filter((inner) =>\n    inner.title.toLocaleLowerCase().includes(search.toLocaleLowerCase())\n  );\n\n  const clearAllData = () => {\n    setData([]);\n  };\n\n  return (\n    <>\n      <Header />\n      <TwitForm\n        clearAllData={clearAllData}\n        data={data}\n        setData={setData}\n        search={search}\n        setSearch={setSearch}\n        handleRemoveChecked={handleRemoveChecked}\n      />\n      <TwitList\n        checkState={checkState}\n        data={filteredList}\n        onDelete={handleRemove}\n        onEdit={updateData}\n        setEditingTitle={setEditingTitle}\n        setEditingDescription={setEditingDescription}\n        editingTitle={editingTitle}\n        editingDescription={editingDescription}\n      />\n      <Footer />\n    </>\n  );\n};\n\nexport default Twit;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport Twit from \"./Twit\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Twit />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}